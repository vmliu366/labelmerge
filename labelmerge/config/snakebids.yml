---
bids_dir: /path/to/bids/dir
output_dir: /path/to/output/dir   # don't use "."

snakebids_dir: .    # DO NOT MODIFY - used to refer to files need by workflow running with CLI

debug: false  # Enable printing of debug statements during parsing -- disable if generating dag visualizations 

derivatives: false  # Search in bids/derivatives if True; can also be path(s) to derivatives datasets

# List of analysis levels in bids app
analysis_levels: &analysis_levels
  - participant

# Mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - all

# this configures the pybids grabber - create an entry for each type of input you want to grab
# indexed by name of input dictionary for each input is passed directly to pybids get()
# https://bids-standard.github.io/pybids/generated/bids.layout.BIDSLayout.html#bids.layout.BIDSLayout.get
pybids_inputs:
  labelmap:
    filters:
      suffix: dseg
      extension: .nii.gz
      datatype: anat
      desc: true
    wildcards:
      - subject
      - session
      - res
      - space
# Configuration for the command-line parameters to make available
# passed on the argparse add_argument()
parse_args:
  # --- core BIDS-app options --- (do not modify below) ---#
  bids_dir:
    help: The directory with the input dataset formatted according to the BIDS standard

  output_dir:
    help: The directory where the output files should be stored. If you are running
      group level analysis, this folder should be prepopulated with the results of
      the participant level analysis

  analysis_level:
    help: Level of the analysis that will be performed
    choices: *analysis_levels

  --participant_label:
    help: The label(s) of the participant(s) that should be analyzed. The label corresponds
      to sub-<participant_label> from the BIDS spec (so it does not include "sub-").
      If this parameter is not provided, all subjects will be analyzed. Multiple participants
      can be specified with a space seperated list.
    nargs: +

  --exclude_participant_label:
    help: The label(s) of the participant(s) that should be excluded. The label corresponds
      to sub-<participant_label> from the BIDS spec (so it does not include "sub-").
      If this parameter is not provided, all subjects will be analyzed. Multiple participants
      can be specified with a space sepearated list.
    nargs: +
#-----------------------------------------------------# 

#--- additional BIDS-app options --- (add in below) --#
#-----------------------------------------------------#

  --overlay_bids_dir:
    help: Directory containing labelmaps to be overlaid on the base input labelmaps.
    nargs: '?'
    type: Path
  --base_desc:
    help: Description entity for base labelmaps
    nargs: '?'
  --overlay_desc:
    help: Description entity for overlay labelmaps
    nargs: '?'
  --base_exceptions:
    help: Space separated integer labels from the base labelmap to keep over overlay labels at the same voxels.
    nargs: '*'
  --overlay_exceptions:
    help: Space separated integer labels from the overlay image to be overwritten by base labels at the same voxels.
    nargs: '*'
  --base_drops:
    help: Space separated integer labels from the base image to drop from the output.
    nargs: '*'
  --overlay_drops:
    help: Space separated integer labels from the overlay image to drop from the output.
    nargs: '*'
  --output_desc:
    help: Description entity for output labelmaps 
    nargs: '?'

# Workflow specific config

# Containers
# Note: Update from latest to use specific tags
singularity:
  neuroglia-core: docker://khanlab/neuroglia-core:latest
